name: Build Dev

on:
  workflow_dispatch:
  push:
    branches:
      - Beta-Dev
    

jobs:
  build:
    runs-on: windows-latest
   
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Nuget Packages
        uses: actions/cache@v1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install MkDocs
        run: pip install mkdocs
        
      - name: Install MkDocs-Material
        run: pip install mkdocs-material
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build application
        run: dotnet publish -c Release -o bin\Publish
      - name: Set assembly version as environment variable
        shell: pwsh
        id: get_version
        run: |
          $file = "bin\Publish\BLAZAM.dll";
          $versionInfo = (Get-Item $file).VersionInfo
          $fileVersion = $versionInfo.FileVersion
          $productVersion = $versionInfo.ProductVersion
          echo "ASSEMBLY_VERSION=$fileVersion.$productVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Show Version
        run: echo $env.ASSEMBLY_VERSION
      - name: Compress files
        run: Compress-Archive -Path bin\Publish\* -DestinationPath blazam-nightly-v${{ env.ASSEMBLY_VERSION }}.zip
      - uses: actions/upload-artifact@v3
        with:
          name: v${{ env.ASSEMBLY_VERSION }}
          path: bin\Publish


      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        
      #  with:
      #    tag_name: Nightly-v${{ env.ASSEMBLY_VERSION }}
      #    release_name: Nightly - v${{ env.ASSEMBLY_VERSION }}
      #    body: Automated release created by GitHub Actions
      #    draft: false
      #    prerelease: true
      #- name: Upload Release Asset
      #  id: upload-release-asset
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: blazam-nightly-v${{ env.ASSEMBLY_VERSION }}.zip
      #    asset_name: blazam-nightly-v${{ env.ASSEMBLY_VERSION }}.zip
      #    asset_content_type: application/zip
