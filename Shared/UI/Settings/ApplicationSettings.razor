@using BLAZAM.Server.Pages;
@using Microsoft.EntityFrameworkCore;
@using BLAZAM.Common.Data.ActiveDirectory.Interfaces;
@using BLAZAM.Server.Data.Services.Email;
@inject IDbContextFactory<DatabaseContext> DbFactory
@inherits ValidatedForm


<LoadingIndicator Height="Height.Is100" Visible=LoadingData>

    <Validations Mode="ValidationMode.Auto" Model="@settings" StatusChanged="OnValidation">
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Application Name"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit Placeholder="Give you're application a display name" @bind-Text="@settings.AppName">
                            <Feedback>
                                <ValidationError />
                                <ValidationNone>
                                    You must give the Web Application a personalized name.
                                </ValidationNone>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
        </Row>
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Homepage Message"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <MemoEdit Placeholder="Place a custom welcome message for your users on the dashboard" @bind-Text="@settings.MOTD">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </MemoEdit>
                    </FieldBody>
                </Field>

            </Validation>
        </Row>

        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Force Https"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <Switch TValue="bool" @bind-Checked="@settings.ForceHTTPS" />
                    </FieldBody>
                </Field>

            </Validation>
        </Row>
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["User Helpdesk URL"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit Placeholder="If not provided, support links will be disabled" @bind-Text="@settings.UserHelpdeskURL">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>

            </Validation>
        </Row>


        <Row Margin=Margin.Is3>
            <Field Horizontal>

                <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">
                    @SettingsLocalization["Branding Icon"]
                    @if (settings != null && settings.AppIcon != null && settings.AppIcon.Length > 0)
                    {
                        <img class="app-icon" src="@StaticAssets.ApplicationIcon" />
                    }
                </FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is8">

                    <Blazorise.FilePicker Upload="LoadIcon" />

                </FieldBody>
                <FieldBody ColumnSize="ColumnSize.Is2">
                    <Tooltip Text="Remove custom icon">
                        <AppCloseButton Clicked="@(()=>{settings.AppIcon=null;})" />
                    </Tooltip>
                </FieldBody>
            </Field>

        </Row>

        <Row Margin=Margin.Is3>
                <Validation Validator="AppValidationRule.IsFqdn">
                    <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Website FQDN"]</FieldLabel>
                        <FieldHelp>Enter the fqdn of the published website. (eg: blazam.mydomain.company)</FieldHelp>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit Placeholder="Enter the web address" @bind-Text="@settings.AppFQDN">
                                <Feedback>
                                    <ValidationError />
                                    <ValidationNone>
                                        You must give the Web Application a FQDN to use auto updates.
                                    </ValidationNone>
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
            </Row>

   
        <Row Margin=Margin.Is3>
            <Button Disabled="saveDisabled" @onclick="Save" Color="Color.Success">Save Changes</Button>
        </Row>
    </Validations>
</LoadingIndicator>
@code {
    AppSettings settings = new AppSettings();

    protected override async Task OnInitializedAsync()
    {
        Task.Run(() =>
        {
            settings = Context.AppSettings.FirstOrDefault();
            LoadingData = false;
            InvokeAsync(StateHasChanged);
        });
    }


    private async void LoadIcon(FileUploadEventArgs e)
    {
        //TODO Try and capture the moment the file upload starts
        using (var stream = e.File.OpenReadStream(5000000))
        {
            using (var memoryStream = new MemoryStream())
            {
                await stream.CopyToAsync(memoryStream);
                settings.AppIcon = memoryStream.ToArray();
            }
        }
        await Context.SaveChangesAsync();
        await InvokeAsync(StateHasChanged);


    }

    protected override void Save()
    {
        base.Save();
    }

}
