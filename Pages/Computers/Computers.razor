@page "/computers/search"

@page "/computers/search/{SearchTermParameter}"

@attribute [Authorize]
@inherits DirectorySearchPage


<AuthorizeView Roles="@(UserRoles.SearchComputers+","+UserRoles.SuperAdmin)">

    <SetHeader>
        <CascadingValue Value="Searcher">
            <SearchPageHeader OnSubmit=SubmitSearch Text="Search Computers">
                <ADComputerAutoComplete @bind-SearchTerm="@SearchTerm" />
            </SearchPageHeader>
        </CascadingValue>

    </SetHeader>



    @if (Searcher.Results != null && Searcher.Results.Count > 1)
    {

          <Row Width="Width.Is100">
            <Column ColumnSize="ColumnSize.Is6">
                Results found: @Searcher.Results.Count
            </Column>
            <Column ColumnSize="ColumnSize.Is6">
                Time elapsed: @Searcher.SearchTime
            </Column>
        </Row>

        <Virtualize Items="results.Cast<IADComputer>().ToArray()" TItem="IADComputer" Context="u" OverscanCount="30">
            <ItemContent>
                @if (u.CanRead)
                {


                    <Div Class="cursor-pointer" @onclick=@(()=>{ SubmitSearch(u.CanonicalName);}) Flex="Flex.InlineFlex.JustifyContent.Between" Width="Width.Is100">
                        <Heading Margin="Margin.Is2.FromBottom">@u.CanonicalName</Heading>
                        <Small>@u.OU.ToPrettyOu()</Small>
                    </Div>


                }
            </ItemContent>
            <Placeholder>
                <Div Flex="Flex.InlineFlex.JustifyContent.Between" Width="Width.Is100">
                    <Heading Margin="Margin.Is2.FromBottom">Loading...</Heading>
                    <Small>Loading...</Small>
                </Div>

            </Placeholder>
        </Virtualize>
    }
    else if (Searcher.Results != null && Searcher.Results.Count == 1)
    {
        var computer = (IADComputer)Searcher.Results[0];
        if (computer.CanRead)
        {
            if (!computer.NewEntry)
                AuditLogger.Computer.Searched(computer);
            <ViewComputer Computer="computer" />
        }
        else
        {
            <SearchIcon Name="@SearchIcon" Text="@ModelsTypeName" />

        }
    }
    else if (LoadingData)
    {
        <LoadingIndicator Height="Height.Is100" Visible=LoadingData>
            <SearchIcon Name="@SearchIcon" Text="@ModelsTypeName" />
        </LoadingIndicator>
    }
    else
    {
        <SearchIcon Name="@SearchIcon" Text="@ModelsTypeName" />

    }


</AuthorizeView>

@code {
    protected string ModelsTypeName { get; set; } = "Computers";
    protected string SearchIcon { get; set; } = "fa-solid fa-computer";


   

    protected override async Task OnInitializedAsync()
    {
        BaseSearchUri = "/computers/search/";
        await base.OnInitializedAsync();
        Searcher.ResultsCollected += ((batch) =>
             {
                 results.AddRange(batch);

                 InvokeAsync(StateHasChanged);
             });
        Searcher.OnSearchStarted += (() =>
       {
           InvokeAsync(StateHasChanged);
       });
        Searcher.OnSearchCompleted += (() =>
       {
           
           InvokeAsync(StateHasChanged);
       });
        Search();

    }

    public override async Task InvokeSearch()
    {
        Searcher.GeneralSearchTerm = SearchTermParameter;
        Searcher.ObjectTypeFilter = ActiveDirectoryObjectType.Computer;


        await Searcher.SearchAsync<ADComputer, IADComputer>();
    }
    



}
