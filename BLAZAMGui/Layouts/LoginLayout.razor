@inherits LayoutComponentBase

@inject IActiveDirectoryContext directory
@inject IAppDatabaseFactory DbFactory
@inject ConnMonitor monitor


<PageTitle>Login</PageTitle>

<MudLayout>
    <div class="full-screen">
        <div class="blur">
            <div class="full-screenBG" />
        </div>
        <MudMainContent>

            <Row>
                <div style="height:fit-content; max-height:600px;max-width:450px;position: absolute;
                            top:0;
                            bottom: 0;
                            left: 0;
                            right: 0;

                            margin: auto;">
                    <MudCard Square=true Elevation="10">
                            @Body
                       
                    </MudCard>
                    @if (monitor.DirectoryConnectionStatus == ServiceConnectionState.Connecting)
                    {
                     
                            <MudProgressLinear Color="Color.Warning" Indeterminate=true />
                            <MudAlert Style="left:25px;right:25px;" Class="absolute  mud-alert-filled-warning">Directory is connecting... Local admin login only...</MudAlert>
                        
                        
                    }
                    @if (monitor.DirectoryConnectionStatus == ServiceConnectionState.Down){
                        @* <MudProgressLinear Color="Color.Error" Indeterminate=true /> *@
                        <MudAlert Style="left:25px;right:25px;" Class="absolute  mud-alert-filled-error">Unable to connect to directory after @directory.FailedConnectionAttempts attempts ... Local admin login only...</MudAlert>

                    }
                    
                </div>
            </Row>
        </MudMainContent>


    </div>

</MudLayout>


<style>
    body {
        background: linear-gradient(253deg, #113d99, #088364, #aed049);
        background-size: 300% 300%;
        -webkit-animation: Background 50s ease infinite;
        -moz-animation: Background 50s ease infinite;
        animation: Background 50s ease infinite;
    }

    @@-webkit-keyframes Background {
        0% {
            background-position: 0% 50%
        }

        50% {
            background-position: 100% 50%
        }

        100% {
            background-position: 0% 50%
        }
    }

    @@-moz-keyframes Background {
        0% {
            background-position: 0% 50%
        }

        50% {
            background-position: 100% 50%
        }

        100% {
            background-position: 0% 50%
        }
    }

    @@keyframes Background {
        0% {
            background-position: 0% 50%
        }

        50% {
            background-position: 100% 50%
        }

        100% {
            background-position: 0% 50%
        }
    }

    .blur {
        width: 100%;
        height: 100%;
        -webkit-filter: blur(6px);
        -moz-filter: blur(6px);
        -o-filter: blur(6px);
        -ms-filter: blur(6px);
        filter: blur(0.4vmax);
    }

    .full-screen {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: -webkit-flex;
        display: flex;
        -webkit-flex-direction: column
        /* works with row or column */
        flex-direction: column;
        -webkit-align-items: center;
        align-items: center;
        -webkit-justify-content: center;
        justify-content: center;
        text-align: center;
    }

    .full-screenBG {
        background: url(/img/loginbgmin.png);
        background-size: cover;
        background-position: center;
        width: 100%;
        height: 100%;
        -webkit-animation: HueAnimation 120s ease infinite;
        animation: HueAnimation 120s ease infinite;
    }

    @@-webkit-keyframes HueAnimation {
        0% {
            -webkit-filter: hue-rotate(0deg);
            -webkit-transform: scale(1.0);
        }

        25% {
            -webkit-filter: hue-rotate(90deg);
        }

        50% {
            -webkit-filter: hue-rotate(180deg);
            -webkit-transform: scale(1.1);
        }

        75% {
            -webkit-filter: hue-rotate(270deg);
        }

        100% {
            -webkit-filter: hue-rotate(360deg);
            -webkit-transform: scale(1.0);
        }
    }

    @@keyframes HueAnimation {
        0% {
            filter: hue-rotate(0deg);
            transform: scale(1.0);
        }

        50% {
            filter: hue-rotate(100deg);
            transform: scale(1.1);
        }

        100% {
            filter: hue-rotate(0deg);
            transform: scale(1.0);
        }
    }








</style>
@code{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        monitor.OnDirectoryConnectionChanged += ((state) => { InvokeAsync(StateHasChanged); });
    }

}

