@inherits AppComponentBase



@if (UserState?.Preferences?.ProfilePicture != null)
{
    <Base64Image Elevation="4" Class="  mud-border-secondary border-2 mud-avatar mud-avatar-medium" Data="@UserState.Preferences?.ProfilePicture" />

}
else
{
    <MudAvatar Elevation="4" Style="@AvatarColor">@GetInitials()</MudAvatar>

}



@code {
    string AvatarColor
    {
        get
        {
            if (UserState == null) return "background-color:#0c13a7";
            int usernameHash = UserState.Username?.GetAppHashCode() ?? 0;
            byte[] usernameHashBytes = Helpers.ByteHelpers.ToByteArray(usernameHash, 3);
            int totalBytes = 0;
            for (int x = 0; x < usernameHashBytes.Length; x++)
            {
                totalBytes += usernameHashBytes[x];
            }
            var distanceFrom255 = 255 - totalBytes;
            if (distanceFrom255 > 0)
            {
                for (int x = 0; x < usernameHashBytes.Length; x++)
                {
                    usernameHashBytes[x] = (byte)((int)usernameHashBytes[x] + distanceFrom255);
                }
            }
            string hexColor = "background-color:#";
            hexColor += Convert.ToHexString(usernameHashBytes.Take(3).ToArray());
            return hexColor;

        }
    }
    [Parameter]
    public IApplicationUserState? UserState { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    private string GetInitials()
    {
        if (!UserStateService.CurrentUsername.IsNullOrEmpty())
        {
            if (UserStateService.CurrentUsername.Split(" ").Length > 1)
            {
                string initials = "";
                UserStateService.CurrentUsername.Split(" ").ForEach(p => initials += p.First());
                return initials;
            }
            else
            {
                return UserStateService.CurrentUsername?.FirstOrDefault().ToString();
            }
        }
        return default;

    }
}