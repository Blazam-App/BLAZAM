@inherits AppModalContent
<div Background="Background.Light" Color="Color.Dark">
    <Section Title=@AppLocalization["Name"]>

        @if (Group.CanEditField(ActiveDirectoryFields.SAMAccountName))
        {
            

                    <MudTextField Label="@AppLocalization["Group Name"]" @bind-Value="@GroupName" />

                
            
        }

      
    </Section>

    @if (Group.CanEditField(ActiveDirectoryFields.Mail))
    {
        

                <MudTextField Label="@AppLocalization["Email Address"]" @bind-Value="@Group.Email" />

            
        
    }

    <MudButton Color=Color.Primary OnClick="SaveChanges">@AppLocalization["Save Changes"]</MudButton>
</div>
@code {
    #nullable disable warnings
    string GroupName;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        GroupName = Group.CanonicalName;
        await InvokeAsync(StateHasChanged);
    }


    async Task SaveChanges()
    {
        if(GroupName.IsNullOrEmpty()){
            SnackBarService.Warning("You must provide a group name");
            GroupName = Group.CanonicalName;
        }
        try{
            Group.Rename(GroupName);
            SnackBarService.Success("The group has been renamed.");
            
            Close();
        }
        catch(Exception ex)
        {
            Loggers.ActiveDirectryLogger.Error("Error attempting to rename a group");
            Loggers.ActiveDirectryLogger.Error(ex.Message,ex);
            SnackBarService.Error("The group could not be renamed.");
        }

    }

}
