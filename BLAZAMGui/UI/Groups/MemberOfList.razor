@inherits AppComponentBase
@if (Model != null)
{
    @if (Model.MemberOf.Count > 0)
    {
        <MudList Disabled=false
                 T="string"
                 Dense=true
                 Style="max-height:200px; overflow-y:auto;">
            @foreach (IADGroup g in Model.MemberOf.Where(group => group.CanRead).OrderBy(g => g.CanonicalName))
            {
                if (g.CanRead)
                {
                    <MudListItem>
                        <ChildContent>
                            <MudStack Row=true>

                                <MudLink Target="@Target"
                                         Class="align-middle"
                                         Href="@g.SearchUri">
                                    @g.CanonicalName
                                </MudLink>
                                @if (g.CanUnassign)
                                {
                                    <MudSpacer />
                                    <MudIconButton Disabled=@Disabled Size="Size.Small" OnClick="@(()=>{Model.UnassignFrom(g);})" Class="align-end align-middle" Color=Color.Error Icon="@Icons.Material.Filled.Close" />
                                }
                            </MudStack>
                        </ChildContent>
                    </MudListItem>

                }

            }
            @if (Model.MemberOf.Where(group => !group.CanRead).Count() > 0)
            {
                <MudListItem Text="The user is in more groups you don't have access to" />
            }

        </MudList>
    }
    else
    {
        <MudText>@AppLocalization["Not a member of any groups"]</MudText>
    }
    @if (CurrentUser.State.CanAssign)
    {

        <MudButton Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.GroupAdd"
                   OnClick="@(()=>{AssignToClicked.InvokeAsync();})">
            @AppLocalization["Assign To"]
        </MudButton>
    }
}
@code {
    [CascadingParameter]
    public bool EditMode { get; set; }
    [Parameter]
    public string? Target { get; set; }
    [Parameter]
    public bool Disabled { get; set; }
    [Parameter]
    public IGroupableDirectoryAdapter Model { get; set; }
    [Parameter]
    public EventCallback AssignToClicked { get; set; }
}