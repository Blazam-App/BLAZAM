@inherits DatabaseComponentBase

@code {
    protected List<TimeSpan> _timeSpan_Days = new List<TimeSpan>
    {
           TimeSpan.FromDays(1),
           TimeSpan.FromDays(5),
           TimeSpan.FromDays(14),
           TimeSpan.FromDays(30),
           TimeSpan.FromDays(90),
           TimeSpan.FromDays(180),
           TimeSpan.FromDays(360)
    
    }; 
    protected List<TimeSpan> _timeSpan_Hours = new List<TimeSpan>
    {
           TimeSpan.FromHours(1),
           TimeSpan.FromHours(4),
           TimeSpan.FromHours(8),
           TimeSpan.FromHours(12),
           TimeSpan.FromHours(24),
           TimeSpan.FromHours(48),
           TimeSpan.FromHours(72)
    
    };



    [Parameter]
    public RenderFragment? WidgetContent { get; set; }
    [Parameter]
    public TimeSpan TimeSpan { get; set; }
    public string Title { get; set; }
    [Parameter]
    public DashboardWidgetType WidgetType { get; set; }
    [Parameter]
    public int ItemsPerPage { get; set; } = 5;
    [CascadingParameter]
    public CurrentUserDashboardWidgets CurrentUserDashboardWidgets { get; set; }

    protected virtual void RowClicked(DataGridRowClickEventArgs<IDirectoryEntryAdapter> args)
    {
        if (args.Item != null)
        {
            GoTo(args.Item);
        }
    }
    protected virtual void GoTo(IDirectoryEntryAdapter args)
    {
        Nav.NavigateTo(args.SearchUri);
    }
    protected async void SetRowsPerPage(int rowPerPage)
    {
        try
        {
            CurrentUser.State.Preferences.DashboardWidgets.FirstOrDefault(w => w.WidgetType.Equals(WidgetType)).ItemsPerPage = rowPerPage;
            await CurrentUser.State.SaveDashboardWidgets();
        }catch (Exception ex)
        {
            Loggers.SystemLogger.Error("Error attempting to set a widgets rows per page preference. {Error}", ex);
        }
    }
}
