@inherits Widget
@attribute [Authorize]

<MudDataGrid T="IDirectoryEntryAdapter"
             Items="LockedUsers"
             RowClick="@RowClicked"
             RowClass="cursor-pointer"
             Dense=true
             Filterable=true
             RowsPerPage="@ItemsPerPage"
             RowsPerPageChanged="@SetRowsPerPage"
             FilterMode="DataGridFilterMode.Simple"
             Loading=@LoadingData
             Square=true
             ColumnResizeMode="ResizeMode.Column"
             Virtualize=true
             Class="py-0"
             SortMode="SortMode.Single">
    <Columns>
        <TemplateColumn Title="Name">
            <CellTemplate>
                <MudContextMenu>

                    <ChildContent>

                        <AppTooltip Text="@context.Item?.OU.ToPrettyOu()">
                            <MudText>@context.Item?.CanonicalName</MudText>
                        </AppTooltip>

                    </ChildContent>
                    <MenuContents>

                        <DirectoryEntryContextMenuItems Entry="@context.Item" />

                    </MenuContents>
                </MudContextMenu>
            </CellTemplate>
        </TemplateColumn>
        <TemplateColumn Title="Password changed in the last 90 days">
            <CellTemplate>
                <MudText>@(((IADUser)context.Item).PasswordLastSet)</MudText>
            </CellTemplate>
        </TemplateColumn>

    </Columns>
    <PagerContent>
        <MudDataGridPager T="IDirectoryEntryAdapter" />
    </PagerContent>
</MudDataGrid>


<MudOverlay Visible=LoadingData>
    <MudProgressLinear Indeterminate=true />
</MudOverlay>
@code {
    List<IADUser> LockedUsers = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        CurrentUserDashboardWidgets.OnRefreshWidget += (Widget widget) =>
       {
           if (widget.WidgetType.Equals(WidgetType))
           {
               _ = RefreshData();

           }

       };
        _ = RefreshData();
    }
    async Task RefreshData()
    {
        LoadingData = true;
        await InvokeAsync(StateHasChanged);
        LockedUsers = await Directory.Users.FindChangedPasswordUsersAsync(false);
        LoadingData = false;
        await InvokeAsync(StateHasChanged);

    }
}
