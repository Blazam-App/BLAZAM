@inherits ChatComponentBase

@{
    var localTimestamp = Message.Timestamp.ToLocalTime();
    var timestamp = "";
    bool timestampeShortend = false;
    if (localTimestamp.Day.Equals(DateTime.Now.Day))
    {
        timestamp = localTimestamp.ToShortTimeString();
        timestampeShortend = true;
    }
    else if (DateTime.Now - localTimestamp < TimeSpan.FromDays(1))
    {
        timestamp = "Yesterday " + localTimestamp.ToShortTimeString();
        timestampeShortend = true;

    }
    else
    {
        timestamp = localTimestamp.ToString();
    }
}

@if (Message.User.Username != CurrentUser.State.Username)
{
    <MudStack Class="w-100">
        <MudStack Row="true">
            <MudChip Size=Size.Small Color="Color.Secondary">@Message.User.Username</MudChip>
            <MudText Class="align-middle">@Message.Message</MudText>
           
        </MudStack>
        <MudTooltip Text="@localTimestamp.ToString()" ShowOnHover=@timestampeShortend>

            <MudText Class="w-max" Typo="Typo.caption">@timestamp</MudText>
        </MudTooltip>
    </MudStack>
}
else
{
    <MudStack Justify="Justify.FlexEnd" Class="w-100">
        <MudStack Justify="Justify.FlexEnd" Row="true">
            <MudText Class="align-middle">@Message.Message</MudText>

            <MudChip Size=Size.Small
                 Color="Color.Tertiary">
                @Message.User.Username
            </MudChip>
            
        </MudStack>
        <MudTooltip RootClass="align-end" Style="z-index:1500 !important;" Text="@localTimestamp.ToString()" ShowOnHover=@timestampeShortend>

            <MudText Class="w-max" Typo="Typo.caption">@timestamp</MudText>
        </MudTooltip>
    </MudStack>

}

@code {
    [Parameter]
    public ChatMessage Message { get; set; }

}