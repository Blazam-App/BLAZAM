<MudSelect Label="@Label" T="string" @bind-Value="@Value" Disabled=@Disabled>
    <MudSelectItem Value="String.Empty"></MudSelectItem>
    @for (var i = 'D'; i <= 'Z'; i++)
    {
        var driveLetter = (i.ToString() + ":");
        <MudSelectItem Value=@driveLetter>@driveLetter</MudSelectItem>
    }
</MudSelect>

@code {
    private IEnumerable<string> selectedValue => new List<string>() { Value };

    private string _value;
    [Parameter]
    public string Value
    {
        get => _value; set
        {
            if (_value == value) return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }
    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public string Label{ get; set; }
    [Parameter]
    public bool Disabled{ get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}
