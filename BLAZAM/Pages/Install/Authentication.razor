@using System.Text.Json
@using System.Net
@using System.Diagnostics
@using Microsoft.EntityFrameworkCore;
@using BLAZAM.Common.Data.ActiveDirectory.Interfaces;
@using BLAZAM.Server.Data.Services.Email;
@layout InstallLayout
@inherits ValidatedForm

<Heading Size="HeadingSize.Is3">Authentication</Heading>
<Div>
    <Heading Size="HeadingSize.Is6">
        Please set a secure admin password.

    </Heading>
    <Heading Size="HeadingSize.Is6">

        This account will have total application access.
    </Heading>
    <Form @onsubmit="SubmitForm">
        <SettingsField>
            <FieldLabel>Username</FieldLabel>
            <FieldBody>
                <TextEdit Text="admin" Disabled />
            </FieldBody>
        </SettingsField>
        <Validations Model=adminPassword StatusChanged="OnValidation">
            <Validation Validator="AppValidationRule.IsValidPassword">
                <SettingsField>
                    <FieldLabel>Password</FieldLabel>
                    <FieldBody>
                        <TextEdit Role="TextRole.Password" @bind-Text=adminPassword>
                            <Feedback>
                                <ValidationError>
                                    The password does not meet the minimum complexity requirements.
                                </ValidationError>
                            </Feedback>
                            </TextEdit>
                    </FieldBody>
                </SettingsField>
            </Validation>
            <Validation Validator="Matches">
                <SettingsField>
                    <FieldLabel>Confirm Password</FieldLabel>
                    <FieldBody>
                        <TextEdit Role="TextRole.Password">
                            <Feedback>
                                <ValidationError>
                                    The passwords do not match.
                                </ValidationError>
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </SettingsField>
            </Validation>
        </Validations>


        <Button Disabled=saveDisabled Color="Color.Primary" Type="ButtonType.Submit">Save Password</Button>
    </Form>

</Div>


@code {
    [Parameter]
    public EventCallback StepCompleted { get; set; }

    private string errorText = "";
    private string showError = "d-none";
    public string adminPassword = "";
    public async void SubmitForm()
    {
        DatabaseContext context = DbFactory.CreateDbContext();
        try
        {
            context.AuthenticationSettings.FirstOrDefault().AdminPassword = adminPassword;

            await context.SaveChangesAsync();
            StepCompleted.InvokeAsync();

        }
        catch (Exception ex)
        {
            errorText = ex.Message + " " + ex.InnerException?.Message;
            showError = "";

        }
        await InvokeAsync(StateHasChanged);
    }
    async void Matches(ValidatorEventArgs e)
    {
        e.Status = ((adminPassword.Equals(e.Value as string)) ? ValidationStatus.Success : ValidationStatus.Error);
    }
}
