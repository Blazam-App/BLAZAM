@using System.Text.Json
@using System.Net
@using System.Diagnostics
@using Microsoft.EntityFrameworkCore;
@layout InstallLayout
@inherits ValidatedForm

<MudText Typo="Typo.h3" Size="HeadingSize.Is3">Authentication</MudText>
<MudText Typo="Typo.h6">
    Please set a secure admin password.

</MudText>
<MudText Typo="Typo.h6">

    This account will have total application access.
</MudText>
<EditForm Model=settings OnValidSubmit="SubmitForm">
    <SettingsField>
        <FieldLabel>
            @AppLocalization["Username"]
        </FieldLabel>
        <ChildContent>
            <MudTextField Label="Username" Text="admin" T=string Disabled />
        </ChildContent>
    </SettingsField>
    <SettingsField>
        <FieldLabel>
            @AppLocalization["Password"]
        </FieldLabel>
        <ChildContent>
            <MudTextField Label="Password"
                          AutoFocus=true
                          Immediate=true
                          HelperText="Must be 6 characters or longer containing at least one letter,numer and special character."
                          InputType="InputType.Password"
                          For="@(() => settings.AdminPassword)"
                          @bind-Value=settings.AdminPassword />
        </ChildContent>

    </SettingsField>
    <SettingsField>
        <FieldLabel>
            @AppLocalization["Password"]
        </FieldLabel>
        <ChildContent>
            <MudTextField For="@(() => settings.AdminPasswordConfirmed)"
                          Immediate=true
                          @bind-Value=settings.AdminPasswordConfirmed
                          Label="Confirm Password"
                          InputType="InputType.Password"
                          T="string" />
        </ChildContent>

    </SettingsField>


    <MudButton Disabled=SaveDisabled Color="Color.Primary" ButtonType="ButtonType.Submit">Save Password</MudButton>
</EditForm>


@code {
    [Parameter]
    public EventCallback StepCompleted { get; set; }

    AuthenticationSettings settings = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        settings = await Context.AuthenticationSettings.FirstOrDefaultAsync();

        if (settings !=null && settings.AdminPassword == "password")
            settings.AdminPassword = "";

            
        await InvokeAsync(StateHasChanged);

    }

    public async void SubmitForm()
    {
        try
        {

            if (settings.Id == 0)
                Context.AuthenticationSettings.Add(settings);

            settings.AdminPassword = EncryptionService.EncryptObject(settings.AdminPasswordConfirmed);
            await Context.SaveChangesAsync();
            await StepCompleted.InvokeAsync();

        }
        catch (Exception ex)
        {
            await MessageService.Error(ex.Message + " " + ex.InnerException?.Message);


        }
        await InvokeAsync(StateHasChanged);
    }
}
