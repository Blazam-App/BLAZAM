@page "/"
@using BLAZAM.Static;
@layout LoginLayout

@inherits AppComponentBase



<MudContainer Class="py-5">

    <FullAppName/>
   

    <MudText>@AppLocalization["ApplicationStarting"]</MudText>
    <MudProgressLinear Color="Color.Info" Indeterminate=true />

    <MudElement Class="brand-icon">
        <MudImage Src="@StaticAssets.ApplicationIconUri" />

    </MudElement>
    <MudContainer Style="max-width:300px;" Class="py-4">


    </MudContainer>



    <Copyright Class="mx-auto" />
</MudContainer>

<style>
    body {
        height: 98vh;
    }

    .brand-icon {
        position: fixed;
        left: 5px;
        top: 5px;
    }

        .brand-icon img {
            max-width: 65px;
            max-height: 65px;
        }

    .login-form input {
        max-width: 300px;
        margin-left: auto;
        margin-right: auto;
    }
</style>



@{

    Task.Run(async () =>
    {
        while (waitingForLoadToComplete)
        {

            if (ApplicationInfo.InstallationCompleted)
            {
                waitingForLoadToComplete = false;
                if (Monitor.AppReady == ServiceConnectionState.Up)
                {
                    Nav.NavigateTo("/home", true);
                }
                else if (Monitor.AppReady == ServiceConnectionState.Down)
                {
                    Nav.NavigateTo("/oops", true);

                }
            }
            else
            {
                if (Monitor.AppReady == ServiceConnectionState.Up)
                {
                    Nav.NavigateTo("/install", true);
                }
            }
            if (!waitingForLoadToComplete)
                Task.Delay(1000).Wait();

        }

    });

}
@code {
    private bool waitingForLoadToComplete = true;
    ServiceConnectionState? oldStatus;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Monitor.OnAppReadyChanged += AppReady;

    }
    private void AppReady(ServiceConnectionState newStatus)
    {
        if (newStatus == ServiceConnectionState.Up && oldStatus != newStatus)
        {
            if (ApplicationInfo.InstallationCompleted && Nav.ToBaseRelativePath(Nav.Uri) == "")
            {
                waitingForLoadToComplete = false;

                Nav.NavigateTo("/home");

            }
        }
        oldStatus = newStatus;

    }
}


