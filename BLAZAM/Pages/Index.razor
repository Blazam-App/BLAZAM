@page "/"
@using BLAZAM.Server.Background;
@using BLAZAM.Server.Errors.Database;
@layout MinLayout
@using BLAZAM.Server.Shared.ResourceFiles;
@using Microsoft.EntityFrameworkCore
@using System.DirectoryServices

@inject NavigationManager NavManager
@inject IDbContextFactory<DatabaseContext> DbFactory
@inject ConnMonitor tester
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<AppLocalization> Localizer
<h2>
    @Localizer["ApplicationStarting"]
   
</h2>
<progress />
@{
    tester.OnAppReadyChanged += AppReady;

    Task.Run(async () => {
        while (NavManager.ToBaseRelativePath(NavManager.Uri) == "")
        {
            if (Program.InstallationCompleted)
            {
                if (tester.AppReady == ConnectionState.Up)
                {
                    NavManager.NavigateTo("/home", true);
                }
                else if (tester.AppReady == ConnectionState.Down)
                {
                    NavManager.NavigateTo("/oops", true);

                }
            }
            Task.Delay(1000).Wait();
        }

    });
}
@code{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            var context = DbFactory.CreateDbContext();
            if (context.AppSettings.FirstOrDefault().InstallationCompleted==false)
            {
                NavManager.NavigateTo("/install");
            }
        }
        catch (InvalidOperationException ex)
        {
            switch (ex.HResult){
                //Connection string not set exception
                case -2146233079:
                    NavManager.NavigateTo("/oops", true);
                    break;
            }
        }
        catch (SqlException ex)
        {
            switch (ex.HResult)
            {
                //SQL Coulmun not found exception
                case -2146232060:
                    NavManager.NavigateTo("/install", true);
                    break;
            }
        }
    }
    private void AppReady(ConnectionState newStatus)
    {
        if (newStatus == ConnectionState.Up)
        {
            if (NavManager.ToBaseRelativePath(NavManager.Uri) == "")
            {
                NavManager.NavigateTo("/home");

            }
        }
    }
}

