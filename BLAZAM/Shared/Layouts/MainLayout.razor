@inherits LayoutComponentBase
@using BLAZAM.Server.Background;
@using BLAZAM.Server.Data;
@using BLAZAM.Server.Errors.ActiveDirectory;
@using BLAZAM.Server.Errors.Database;
@using Microsoft.EntityFrameworkCore
@using System.DirectoryServices
@inject NavigationManager Nav
@inject IActiveDirectory directory
@inject IApplicationUserStateService UserStateService
@inject IDbContextFactory<DatabaseContext> DbFactory
@inject ConnMonitor monitor
<PageTitle>@DatabaseCache.ApplicationSettings.AppAbbreviation</PageTitle>
<CascadingValue Value="this">
    <Layout Sider>
        <AuthorizeView Context="authContext">
            <Authorized>
                <LayoutSider>
                    <LayoutSiderContent>
                        <NavMenu />
                    </LayoutSiderContent>
                </LayoutSider>

                <Layout Background="Background.Light" TextColor="TextColor.Dark">

                    <LayoutHeader Fixed>

                        @if (setHeader != null)
                        {
                            @setHeader.ChildContent

                        }
                        else
                        {
                            <SearchPageHeader Text="Search" />
                        }
                        @if (setSubHeader != null)
                        {
                            @setSubHeader.ChildContent

                        }
                    </LayoutHeader>
                    <LayoutContent Style="height: 100vh;overflow: auto;">

                        @Body

                    </LayoutContent>
                    <LayoutFooter>
                     <DirectoryConnectingIndicator/>
                        
                        <AppFooter />
                        @if (Program.InDebugMode)
                        {
                            <AuthorizeView Context="authorizedContext" Roles=@UserRoles.SuperAdmin>
                                <DevTools />
                            </AuthorizeView>
                        }
                    </LayoutFooter>
                </Layout>
                <NotificationBroadcastListener />
            </Authorized>
            <NotAuthorized>
                <Layout>
                    <LayoutContent Style="height: 100vh;overflow: auto;">
                        <CascadingValue Value="this">
                            @Body
                        </CascadingValue>
                    </LayoutContent>
                </Layout>
            </NotAuthorized>
        </AuthorizeView>

    </Layout>
</CascadingValue>

@code {





    SetHeader? setHeader;
    public void SetHeader(SetHeader? setHeader)
    {
        this.setHeader = (setHeader);
        if (setHeader != null)

            this.setHeader.OnRefreshRequested += (() => { InvokeAsync(StateHasChanged); });

        //StateHasChanged();
        InvokeAsync(StateHasChanged);
        //Update();
    }
    SetSubHeader? setSubHeader;
    public void SetSubHeader(SetSubHeader? setSubHeader)
    {
        this.setSubHeader = (setSubHeader);
        if (setSubHeader != null)
            this.setSubHeader.OnRefreshRequested += (() => { InvokeAsync(StateHasChanged); });

        //StateHasChanged();
        InvokeAsync(StateHasChanged);
        //Update();
    }

    public void Update() => StateHasChanged();


}