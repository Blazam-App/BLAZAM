@inherits AppComponentBase

<Bar Mode="BarMode.Horizontal"
     CollapseMode="BarCollapseMode.Small"
     Breakpoint="Breakpoint.Desktop"
     NavigationBreakpoint="Breakpoint.Tablet"
     ThemeContrast="ThemeContrast.Dark"
     Padding="Padding.Is2.OnX"
     Background="Background.Dark"
     TextColor="TextColor.Light"
     VerticalAlignment="VerticalAlignment.Middle"
     Style="height:1.25em">
    <BarBrand Style="font-size:1.25em">
        @UserStateService.CurrentUsername
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart Width=Width.Is100>
            <BarItem Width=Width.Is100>



            </BarItem>



        </BarStart>
        <BarEnd>
            <BarItem>
                <BarDropdown>
                    <BarDropdownToggle>Theme</BarDropdownToggle>
                    <BarDropdownMenu>
                        @foreach (var theme in ApplicationTheme.Themes)
                        {
                            <BarDropdownItem Clicked=@(()=>{SetUserTheme(theme);})> @theme.Name</BarDropdownItem>
                        }

                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
            <BarItem>

                <Tooltip Fade Text="An update is available">
                    <Icon Border=Border.RoundedCircle Name=@("fa-regular fa-circle-up") Background="Background.Warning" TextColor="TextColor.Dark" Clicked=@(()=>{Nav.NavigateTo("/settings/system");}) />

                </Tooltip>

            </BarItem>
        </BarEnd>
    </BarMenu>
</Bar>

@code {
    async Task SetUserTheme(ApplicationTheme theme)
    {
        UserStateService.CurrentUserState.UserSettings.Theme = theme.Name;
        UserStateService.CurrentUserState.SaveUserSettings();
        Refresh();
    }
}