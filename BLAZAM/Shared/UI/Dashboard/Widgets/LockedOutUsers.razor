@inherits Widget
@attribute [Authorize]
<MudDataGrid T="IADUser"
             Items="@LockedUsers"
              Dense
              Filterable
             RowsPerPage="5"
             FilterMode="DataGridFilterMode.Simple"
             Loading=@LoadingData
              Square
             ColumnResizeMode="ResizeMode.Column"
              Virtualize
             RowClass="cursor-pointer"
             RowClick=@GoTo
             Class="py-0"
             SortMode="SortMode.Single">
    <Columns>
        <PropertyColumn Property="x => x.CanonicalName" Title="Name" />
        <PropertyColumn Property="x => x.OU.ToPrettyOu()" Title="OU" />
        <PropertyColumn Property="x => x.LockoutTime" Title="Locked Out" />

    </Columns>
    <PagerContent>
        <MudDataGridPager T="IADUser" />
    </PagerContent>
</MudDataGrid>

@code {
    List<IADUser> LockedUsers
    {
        get => UserStateService.CurrentUserState?.Cache.Get<List<IADUser>>(this.GetType());
        set => UserStateService.CurrentUserState?.Cache.Set(this.GetType(), value);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Name = "Locked Out Users";
        LockedUsers = (await Directory.Users.FindLockedOutUsersAsync()).OrderByDescending(u => u.LockoutTime).Where(u => u.CanRead).ToList();
        LoadingData = false;
        await InvokeAsync(StateHasChanged);
    }
    async Task GoTo(DataGridRowClickEventArgs<IADUser> args)
    {
        Nav.NavigateTo(args.Item.SearchUri);
    }

}
