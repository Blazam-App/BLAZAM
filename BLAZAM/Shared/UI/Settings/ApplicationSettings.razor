@inherits SettingsComponents


<LoadingIndicator Height="Height.Is100" Visible=LoadingData>
    <MudText Typo="Typo.h4">@SettingsLocalization["Application Settings"]</MudText>
    <MudForm @onsubmit="Save">


        <SettingsField>

                <MudTextField Label="@SettingsLocalization["Application Name"]" Placeholder="Give you're application a display name" @bind-Value="@settings.AppName">


                    <ValidationNone>
                        You must give the Web Application a personalized name.
                    </ValidationNone>

                </MudTextField>

        </SettingsField>

        <SettingsField>
            <MudTextField T="string" Label="@SettingsLocalization["Homepage Message"]" Variant="Variant.Text" @bind-Text="@settings.MOTD" Lines="5" Placeholder="Place a custom welcome message for your users on the dashboard" />




        </SettingsField>


        <SettingsField>

            <MudSwitch Label="@SettingsLocalization["Force Https"]" TValue="bool" @bind-Checked="@settings.ForceHTTPS" />

        </SettingsField>

        <SettingsField>

            <MudTextField Label="@SettingsLocalization["User Helpdesk URL"]" Placeholder="If not provided, support links will be disabled" @bind-Value="@settings.UserHelpdeskURL">
                <MudTooltip Display=Display.InlineFlex Margin=Margin.IsAuto.OnX Style="width:max-content" Text="Not Yet Implemented">
                    <MudBadge>!</MudBadge>
                </MudTooltip>


            </MudTextField>

        </SettingsField>



        <SettingsField>

            <MudContainer>
                @SettingsLocalization["Branding Icon"]
                @if (settings != null && settings.AppIcon != null && settings.AppIcon.Length > 0)
                {
                    <MudImage Class="app-icon" Src="@StaticAssets.ApplicationIconUri" />
                    <MudTooltip Text="Remove custom icon">
                        <AppCloseButton OnClick="@(()=>{settings.AppIcon=null;})" />
                    </MudTooltip>
                }
            </MudContainer>
            <MudFileUpload T="IBrowserFile" FilesChanged="LoadIcon">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Material.Filled.CloudUpload"
                               for="@context">
                        Upload Icon
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>

        </SettingsField>



        <SettingsField>

            <MudTextField Label="@SettingsLocalization["Website FQDN"]" HelperText="Enter the fqdn of the published website. (eg: blazam.mydomain.company)" Placeholder="Enter the web address" @bind-Value="@settings.AppFQDN" />
        </SettingsField>

        <SettingsField>

            <MudButton Disabled="saveDisabled" ButtonType="ButtonType.Submit" Color="Color.Success">Save Changes</MudButton>

        </SettingsField>


    </MudForm>
</LoadingIndicator>

@code {
    AppSettings settings = new AppSettings();

    protected override async Task OnInitializedAsync()
    {
        originalSettings = await Context.AppSettings.AsNoTracking().FirstOrDefaultAsync();

        settings = await Context.AppSettings.FirstOrDefaultAsync();
        LoadingData = false;
        await InvokeAsync(StateHasChanged);

    }


    private async void LoadIcon(IBrowserFile e)
    {
        using (var stream = e.OpenReadStream(5000000))
        {
            using (var memoryStream = new MemoryStream())
            {
                await stream.CopyToAsync(memoryStream);
                settings.AppIcon = memoryStream.ToArray();
            }
        }
        await Context.SaveChangesAsync();
        await InvokeAsync(StateHasChanged);


    }

    protected override void Save()
    {
        AuditLogger.System.SettingsChanged("Application", settings.GetChanges(originalSettings));
        base.Save();
    }

}
