
@inherits SettingsComponents


<LoadingIndicator Height="Height.Is100" Visible=LoadingData>
    <MudText Typo ="Typo.h1">@SettingsLocalization["Application Settings"]</MudText>
    <MudForm @onsubmit="Save">

        <Validations Mode="ValidationMode.Auto" Model="@settings" StatusChanged="OnValidation">

            <Validation>
                <SettingsField>
                    <MudFieldLabel>@SettingsLocalization["Application Name"]</FieldLabel>
                    
                        <MudTextField  Placeholder="Give you're application a display name" @bind-Value="@settings.AppName">
                            
                                
                                <ValidationNone>
                                    You must give the Web Application a personalized name.
                                </ValidationNone>
                            
                        </MudTextField >
                    
                </SettingsField>
            </Validation>

            <Validation>
                <SettingsField>
                    <MudFieldLabel>@SettingsLocalization["Homepage Message"]</FieldLabel>
                    
                        <MemoEdit Placeholder="Place a custom welcome message for your users on the dashboard" @bind-Value="@settings.MOTD">
                            
                                
                            
                        </MemoEdit>
                    
                </SettingsField>

            </Validation>

            <Validation>
                <SettingsField>
                    <MudFieldLabel>@SettingsLocalization["Force Https"]</FieldLabel>
                    
                        <MudSwitch TValue="bool" @bind-Checked="@settings.ForceHTTPS" />
                    
                </SettingsField>

            </Validation>
            <Validation>
                <SettingsField>
                    <MudFieldLabel>
                        @SettingsLocalization["User Helpdesk URL"]
                        <MudTooltip Display=Display.InlineFlex Margin=Margin.IsAuto.OnX Style="width:max-content" Text="Not Yet Implemented">
                            <Badge Background="Background.Warning" Pill>!</Badge>
                        </MudTooltip>
                    </FieldLabel>
                    
                        <MudTextField  Placeholder="If not provided, support links will be disabled" @bind-Value="@settings.UserHelpdeskURL">
                            
                                
                            
                        </MudTextField >
                    
                </SettingsField>

            </Validation>


            <SettingsField>

                <MudFieldLabel>
                    @SettingsLocalization["Branding Icon"]
                    @if (settings != null && settings.AppIcon != null && settings.AppIcon.Length > 0)
                    {
                        <MudImage Class="app-icon" Src="@StaticAssets.ApplicationIconUri" />
                        <MudTooltip Text="Remove custom icon">
                            <AppCloseButton Clicked="@(()=>{settings.AppIcon=null;})" />
                        </MudTooltip>
                    }
                </FieldLabel>
                
                    <MudFileUpload AutoReset Upload="LoadIcon" />
                
                </SettingsField>



                <Validation Validator="AppValidationRule.IsFqdn">
                <SettingsField>
                    <MudFieldLabel>@SettingsLocalization["Website FQDN"]</FieldLabel>
                    <MudFieldHelp>Enter the fqdn of the published website. (eg: blazam.mydomain.company)</FieldHelp>
                    
                        <MudTextField  Placeholder="Enter the web address" @bind-Value="@settings.AppFQDN">
                            
                                
                                <ValidationNone>
                                    You must give the Web Application a FQDN to use auto updates.
                                </ValidationNone>
                            
                        </MudTextField >
                    
                </SettingsField>
                </Validation>

                <SettingsField>
                
                    <MudButton Disabled="saveDisabled" ButtonType="ButtonType.Submit" Color="Color.Success">Save Changes</MudButton>
                
                </SettingsField>


                </Validations>
                </MudForm>
                </LoadingIndicator>

                @code {
        AppSettings settings = new AppSettings();

    protected override async Task OnInitializedAsync()
    {
        originalSettings = await Context.AppSettings.AsNoTracking().FirstOrDefaultAsync();

        settings = await Context.AppSettings.FirstOrDefaultAsync();
        LoadingData = false;
        await InvokeAsync(StateHasChanged);

    }


    private async void LoadIcon(FileUploadEventArgs e)
    {
        using (var stream = e.File.OpenReadStream(5000000))
        {
            using (var memoryStream = new MemoryStream())
            {
                await stream.CopyToAsync(memoryStream);
                settings.AppIcon = memoryStream.ToArray();
            }
        }
        await Context.SaveChangesAsync();
        await InvokeAsync(StateHasChanged);


    }

    protected override void Save()
    {
        AuditLogger.System.SettingsChanged("Application", settings.GetChanges(originalSettings));
        base.Save();
    }

}
