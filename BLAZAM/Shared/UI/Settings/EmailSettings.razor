@page "/test"
@inject IDbContextFactory<DatabaseContext> DbFactory
@inherits ValidatedForm



<LoadingIndicator Height="Height.Is100" Visible=LoadingData>


    <Validations Mode="ValidationMode.Auto" Model="@settings" StatusChanged="OnValidation">
        <Row Margin=Margin.Is3>
            <Field Horizontal>
                <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Email Enabled"]</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is10">
                    <Switch @bind-Checked="settings.Enabled" />
                </FieldBody>
            </Field>

        </Row>

        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Admin bcc"]</FieldLabel>
                    <Column ColumnSize="ColumnSize.Is10">
                        <FieldHelp>
                            Addresses to blind copy all application emails that are sent.
                        </FieldHelp>
                        <FieldBody>

                            <TextEdit @bind-Text="settings.AdminBcc">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Column>

                </Field>
            </Validation>

        </Row>
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["SMTP Server"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">

                        <TextEdit @bind-Text="settings.SMTPServer">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
        </Row>
        <Row Margin=Margin.Is3>
            <Column ColumnSize="ColumnSize.IsAuto.OnDesktop">
                <Validation>
                    <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is6.OnDesktop">@SettingsLocalization["SMTP Port"]</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is6">

                            <NumericEdit @bind-Value="settings.SMTPPort">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </FieldBody>
                    </Field>
                </Validation>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto.OnDesktop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is6.OnDesktop">@SettingsLocalization["Use TLS"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is6">
                        <Switch TValue="bool" @bind-Checked="settings.UseTLS" />
                    </FieldBody>
                </Field>

            </Column>
            <Column ColumnSize="ColumnSize.IsAuto.OnDesktop">
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is6.OnDesktop">@SettingsLocalization["Use SMTP Authentication"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is6">
                        <Switch TValue="bool" @bind-Checked="settings.UseSMTPAuth" />
                    </FieldBody>
                </Field>

            </Column>
        </Row>
        @if (settings.UseSMTPAuth)
        {
            <Row Margin=Margin.Is3>
                <Validation>
                    <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["SMTP Username"]</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit @bind-Text="settings.SMTPUsername">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
            </Row>
            <Row Margin=Margin.Is3>
                <Validation>
                    <Field Horizontal>
                        <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["SMTP Password"]</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">

                            <TextEdit @bind-Text="settings.SMTPPassword">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
            </Row>
        }
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["From Address"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">

                        <TextEdit @bind-Text="settings.FromAddress">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
        </Row>
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["From Display Name"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">

                        <TextEdit @bind-Text="settings.FromName">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
        </Row>
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Reply-To Address"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">

                        <TextEdit @bind-Text="settings.ReplyToAddress">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
        </Row>
        <Row Margin=Margin.Is3>
            <Validation>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop">@SettingsLocalization["Reply-To Display Name"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">

                        <TextEdit @bind-Text="settings.ReplyToName">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </FieldBody>
                </Field>
            </Validation>
        </Row>
        <Row Margin=Margin.Is3>
            <Validations Model="testRecipient" StatusChanged="OnValidation">
                <Validation Validator="ValidationRule.IsEmail">
                    <TextEdit Disabled=@(!settings.Enabled) @bind-Text=testRecipient />
                    <Button Disabled=@(!settings.Enabled && !settings.Valid()) @onclick="SendTestEmail" Color="Color.Success">Send Test Email</Button>
                </Validation>
            </Validations>
        </Row>

        <Row Margin=Margin.Is3>
            <Button Disabled="saveDisabled" @onclick="Save" Color="Color.Success">Save Changes</Button>
        </Row>
    </Validations>
</LoadingIndicator>
@code {
    BLAZAM.Common.Models.Database.EmailSettings settings = new BLAZAM.Common.Models.Database.EmailSettings();
    string testRecipient;
    bool _tls;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var set = Context.EmailSettings.FirstOrDefault();

        if (set != null)
        {
            settings = set;
        }


        LoadingData = false;
        await InvokeAsync(StateHasChanged);
    }
    async Task SendTestEmail()
    {
        try
        {
            await EmailService.SendTestEmail(testRecipient);
            MessageService.Success("A test email was sent to " + testRecipient, "Test Email Sent");

        }
        catch (Exception ex)
        {
            MessageService.Error(ex.Message, "Test Failed");
        }
    }
    protected override void Save()
    {
        if (settings.EmailSettingsId == 0)
        {
            Context.EmailSettings.Add(settings);
        }
        base.Save();

    }
}
