@inherits SettingsComponents




<MudText Typo="Typo.h4">@SettingsLocalization["Email Settings"]</MudText>
<MudForm @onsubmit="Save">

    <SettingsField Label="@SettingsLocalization["Email Enabled"]">
        <MudSwitch @bind-Checked="settings.Enabled" />
    </SettingsField>


    <SettingsField Label="@SettingsLocalization["Admin bcc"]">
        <MudTextField HelperText="Addresses to blind copy all application emails that are sent." @bind-Value="settings.AdminBcc" />
    </SettingsField>

    <SettingsField Label="@SettingsLocalization["SMTP Server"]">
        <MudTextField @bind-Value="settings.SMTPServer" />
    </SettingsField>

    <SettingsField Label="@SettingsLocalization["SMTP Port"]">


        <MudNumericField T="int" HideSpinButtons="true" @bind-Value="settings.SMTPPort" />

    </SettingsField>

    <SettingsField Label="@SettingsLocalization["Use TLS"]">

        <MudSwitch @bind-Checked="settings.UseTLS" />

    </SettingsField>

    <SettingsField Label="@SettingsLocalization["Use SMTP Authentication"]">

        <MudSwitch @bind-Checked="settings.UseSMTPAuth" />

    </SettingsField>

    @if (settings.UseSMTPAuth)
    {
        <SettingsField Label="@SettingsLocalization["SMTP Username"]">

            <MudTextField @bind-Value="settings.SMTPUsername" />
        </SettingsField>

        <SettingsField Label="@SettingsLocalization["SMTP Password"]">


            <MudTextField @bind-Value="settings.SMTPPassword" />

        </SettingsField>
    }
    <SettingsField Label="@SettingsLocalization["From Address"]">


        <MudTextField @bind-Value="settings.FromAddress" />
    </SettingsField>
    <SettingsField Label="@SettingsLocalization["From Display Name"]">


        <MudTextField @bind-Value="settings.FromName" />

    </SettingsField>

    <SettingsField Label="@SettingsLocalization["Reply-To Address"]">


        <MudTextField @bind-Value="settings.ReplyToAddress" />

    </SettingsField>

    <SettingsField Label="@SettingsLocalization["Reply-To Display Name"]">


        <MudTextField @bind-Value="settings.ReplyToName" />

    </SettingsField>

    <MudTextField Disabled=@(!settings.Enabled) @bind-Value=testRecipient />

    <MudButton Disabled=@(!settings.Enabled && !settings.Valid()) @onclick="SendTestEmail" Color="Color.Success">Send Test Email</MudButton>

    <SettingsField>

        <MudButton Disabled="saveDisabled" ButtonType="ButtonType.Submit" Color="Color.Success">Save Changes</MudButton>

    </SettingsField>
</MudForm>
@code {
#nullable disable warnings
    BLAZAM.Common.Models.Database.EmailSettings settings = new BLAZAM.Common.Models.Database.EmailSettings();
    string testRecipient;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (Context != null)
        {
            originalSettings = await Context.EmailSettings.AsNoTracking().FirstOrDefaultAsync();
            var set = Context.EmailSettings.FirstOrDefault();

            if (set != null)
            {
                settings = set;
            }
        }

        LoadingData = false;
        await InvokeAsync(StateHasChanged);
    }
    async Task SendTestEmail()
    {
        try
        {
            await EmailService.SendTestEmail(testRecipient);
            await MessageService.Success("A test email was sent to " + testRecipient, "Test Email Sent");

        }
        catch (Exception ex)
        {
            await MessageService.Error(ex.Message, "Test Failed");
        }
    }
    protected override void Save()
    {
        if (settings.Id == 0 && Context != null)
        {
            Context.EmailSettings.Add(settings);
        }
        AuditLogger.System.SettingsChanged("Email", settings.GetChanges(originalSettings));
        base.Save();

    }
}
