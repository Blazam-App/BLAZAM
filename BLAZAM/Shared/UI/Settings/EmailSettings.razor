@inherits SettingsComponents



<LoadingIndicator Height="Height.Is100" Visible=LoadingData>

    <MudText Typo="Typo.h1">@SettingsLocalization["Email Settings"]</MudText>
    <MudForm @onsubmit="Save">

        <SettingsField>

            <MudSwitch Label="@SettingsLocalization["Email Enabled"]" @bind-Checked="settings.Enabled" />

        </SettingsField>


        <SettingsField>


            <MudTextField Label="@SettingsLocalization["Admin bcc"]"
                          HelperText="Addresses to blind copy all application emails that are sent." @bind-Value="settings.AdminBcc"/>

        </SettingsField>

        <SettingsField>


            <MudTextField Label="@SettingsLocalization["SMTP Server"]" @bind-Value="settings.SMTPServer"/>

        </SettingsField>
        <SettingsField>


            <MudNumericField T="int" Label="@SettingsLocalization["SMTP Port"]" HideSpinButtons="true" @bind-Value="settings.SMTPPort" />

        </SettingsField>
        <SettingsField>

            <MudSwitch Label="@SettingsLocalization["Use TLS"]" @bind-Checked="settings.UseTLS" />

        </SettingsField>

        <SettingsField>

            <MudSwitch Label="@SettingsLocalization["Use SMTP Authentication"]" @bind-Checked="settings.UseSMTPAuth" />

        </SettingsField>

        @if (settings.UseSMTPAuth)
        {
            <SettingsField>

                <MudTextField Label="@SettingsLocalization["SMTP Username"]" @bind-Value="settings.SMTPUsername"/>
            </SettingsField>
            <SettingsField>


                <MudTextField Label="@SettingsLocalization["SMTP Password"]" @bind-Value="settings.SMTPPassword"/>

            </SettingsField>
        }
        <SettingsField>


            <MudTextField Label="@SettingsLocalization["From Address"]" @bind-Value="settings.FromAddress"/>
        </SettingsField>
        <SettingsField>


            <MudTextField Label="@SettingsLocalization["From Display Name"]" @bind-Value="settings.FromName"/>

        </SettingsField>
        <SettingsField>


            <MudTextField Label="@SettingsLocalization["Reply-To Address"]" @bind-Value="settings.ReplyToAddress"/>

        </SettingsField>
        <SettingsField>


            <MudTextField Label="@SettingsLocalization["Reply-To Display Name"]" @bind-Value="settings.ReplyToName"/>

        </SettingsField>

        <MudTextField Disabled=@(!settings.Enabled) @bind-Value=testRecipient />
        
        <MudButton Disabled=@(!settings.Enabled && !settings.Valid()) @onclick="SendTestEmail" Color="Color.Success">Send Test Email</MudButton>

        <SettingsField>

            <MudButton Disabled="saveDisabled" ButtonType="ButtonType.Submit" Color="Color.Success">Save Changes</MudButton>

        </SettingsField>
    </MudForm>
</LoadingIndicator>
@code {
#nullable disable warnings
    BLAZAM.Common.Models.Database.EmailSettings settings = new BLAZAM.Common.Models.Database.EmailSettings();
    string testRecipient;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (Context != null)
        {
            originalSettings = await Context.EmailSettings.AsNoTracking().FirstOrDefaultAsync();
            var set = Context.EmailSettings.FirstOrDefault();

            if (set != null)
            {
                settings = set;
            }
        }

        LoadingData = false;
        await InvokeAsync(StateHasChanged);
    }
    async Task SendTestEmail()
    {
        try
        {
            await EmailService.SendTestEmail(testRecipient);
            await MessageService.Success("A test email was sent to " + testRecipient, "Test Email Sent");

        }
        catch (Exception ex)
        {
            await MessageService.Error(ex.Message, "Test Failed");
        }
    }
    protected override void Save()
    {
        if (settings.Id == 0 && Context != null)
        {
            Context.EmailSettings.Add(settings);
        }
        AuditLogger.System.SettingsChanged("Email", settings.GetChanges(originalSettings));
        base.Save();

    }
}
