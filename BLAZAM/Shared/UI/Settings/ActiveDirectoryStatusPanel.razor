@using System.DirectoryServices;
@inherits AppComponent
<Card>
    <CardHeader>
        Active Directory Connection Status
    </CardHeader>
    <CardBody>
      
        <Row>
            <Column>
                Server Port Open
            </Column>
            <Column>
                <StatusCheck Status="_portStatus" />


            </Column>
        </Row>
        <Row>
            <Column>
                Credentials OK
            </Column>
            <Column>
                <StatusCheck Status="_credStatus" />
            </Column>
        </Row>

        <Row>
            <Column>
                Encrypted Connection
                @if (!_encryptedStatus)
                {
                    <br/>
                    <Help>You may need to install the Active Directry CA</Help>
                }
            </Column>
            <Column>
                <StatusCheck Status="_encryptedStatus" />
             
            </Column>
        </Row>
    </CardBody>
    <Progress Value="100" Animated Striped Visibility=@showProgress />
</Card>
@{


}
@code {

    [Parameter]
    public EventCallback DirectoryConnected { get; set; }


    bool _encryptedStatus;
    bool _portStatus;
    bool _credStatus;
    Blazorise.Visibility showProgress = Visibility.Visible;
    DatabaseContext _context;
    Timer t;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Timer t = new Timer(UpdateStatus, null, 0, 1000);
        //Monitor.OnDirectoryConnectionChanged += ((state) => { UpdateStatus(state); });
        //UpdateStatus(null);
    }




    private async void UpdateStatus(object? state)
    {
        if (Directory.Status == DirectoryConnectionStatus.Connecting)
        {
            showProgress = Visibility.Default;
            await InvokeAsync(StateHasChanged);

        }

        if (Directory.PortOpen)
        {
            _portStatus = true;
            if (Directory.Status == DirectoryConnectionStatus.OK)
            {
                _credStatus = true;
                if ((Directory.AppRootDirectoryEntry.AuthenticationType & AuthenticationTypes.Signing) == AuthenticationTypes.Signing ||
                    (Directory.AppRootDirectoryEntry.AuthenticationType | AuthenticationTypes.Encryption) == AuthenticationTypes.Encryption)
                {
                    _encryptedStatus = true;
                }
            }
            else
            {
                _credStatus = false;
            }
        }
        else
        {
            _portStatus = false;
        }


        if (Directory.Status == DirectoryConnectionStatus.Connecting)
        {
            showProgress = Visibility.Default;

        }
        else
        {

            showProgress = Visibility.Invisible;
        }

        await InvokeAsync(StateHasChanged);
    }

   
}
