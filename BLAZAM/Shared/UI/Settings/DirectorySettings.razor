@inject IDbContextFactory<DatabaseContext> DbFactory
@inherits ValidatedForm


<LoadingIndicator Height="Height.Is100" Visible=LoadingData>

    <Row Padding="Padding.Is1.OnMobile.Is2.OnTablet.Is3.OnDesktop.Is4.OnWidescreen.Is5.OnFullHD">
        <Heading>@SettingsLocalization["Active Directory Settings"]</Heading>

       @* <Column ColumnSize="ColumnSize.Is4.OnDesktop">
            <ActiveDirectoryStatusPanel />
        </Column>*@
        <Column ColumnSize="ColumnSize.Is12.OnDesktop">
            <Form @onsubmit="Save">
                <Validations @ref="Validation" Mode="ValidationMode.Auto" Model="@settings" StatusChanged="OnValidation">

                    <Validation>
                        <SettingsField>
                            <FieldLabel>@SettingsLocalization["Server"]</FieldLabel>
                            <FieldHelp>Can be your domain name in most environments</FieldHelp>
                            <FieldBody>
                                @if(Program.InDemoMode && UserStateService.CurrentUsername != "admin")
                                {

                                    <TextEdit Text="Private" Disabled>
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </TextEdit>
                                }
                                else
                                {

                                    <TextEdit @bind-Text="@settings.ServerAddress">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>

                                }
                            </FieldBody>
                        </SettingsField>
                    </Validation>

                    <Validation>
                        <SettingsField>
                            <FieldLabel>
                                @SettingsLocalization["Port"]
                            </FieldLabel>
                            <FieldHelp>
                                The default port of 389 is the recommended port to use.
                                <Tooltip Display="Display.InlineBlock" Multiline Style="max-width:300px" Text="The application will automatically use an SSL
                                            connection if the server's CA Certificate is a trusted CA on this web server. Using port 636 can work,
                                            but may lead to unexpected behaviour of other services that listen to Active Directory changes.">
                                    <Icon Name="IconName.QuestionCircle" TextColor="TextColor.Info" />
                                </Tooltip>
                            </FieldHelp>
                            <FieldBody>
                                @if (Program.InDemoMode && UserStateService.CurrentUsername != "admin")
                                {
                                    <NumericEdit Margin=Margin.IsAuto.OnY Value="0" Disabled>
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </NumericEdit>
                                }
                                else
                                {

                                    <NumericEdit Margin=Margin.IsAuto.OnY @bind-Value="@settings.ServerPort">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </NumericEdit>

                                }
                             
                            </FieldBody>



                        </SettingsField>

                    </Validation>


                    <Validation>
                        <SettingsField>
                            <FieldLabel>@SettingsLocalization["Username"]</FieldLabel>
                            <FieldBody>
                                <TextEdit name="username" @bind-Text="@settings.Username">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </SettingsField>

                    </Validation>


                    <Validation>
                        <SettingsField>
                            <FieldLabel>@SettingsLocalization["Password"]</FieldLabel>
                            <FieldBody>
                                <TextEdit name="password" Role="TextRole.Password" @bind-Text="@settings.Password">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </SettingsField>

                    </Validation>


                    <Validation>
                        <SettingsField>
                            <FieldLabel>@SettingsLocalization["UseTLS"]</FieldLabel>
                            <FieldBody>
                                <Switch TValue="bool" @bind-Checked="@settings.UseTLS" />
                            </FieldBody>
                        </SettingsField>

                    </Validation>


                    <Validation>
                        <SettingsField>
                            <FieldLabel>@SettingsLocalization["FQDN"]</FieldLabel>
                            <FieldBody>
                                <TextEdit name="fqdn" @bind-Text="@settings.FQDN">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </SettingsField>

                    </Validation>


                    <Validation>
                        <SettingsField>
                            <FieldLabel>@SettingsLocalization["BaseDN"]</FieldLabel>
                            <FieldBody>
                                <TextEdit name="baseDN" @bind-Text="@settings.ApplicationBaseDN">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </SettingsField>

                    </Validation>

                    <SettingsField>
                        <FieldBody>
                            <Button Disabled="saveDisabled" Type="ButtonType.Submit" Color="Color.Success">Save Changes</Button>
                        </FieldBody>
                    </SettingsField>
                </Validations>
            </Form>
        </Column>
    </Row>
</LoadingIndicator>
@code {

    ADSettings settings = new ADSettings();
    Validations? Validation;
    bool _insert;

    string passwordInDb;

    protected override async Task OnInitializedAsync()
    {
        Task.Run(async () =>
        {
            var set = Context.ActiveDirectorySettings.FirstOrDefault();
            if (set != null)
            {
                settings = set;
                passwordInDb = settings?.Password;

            }
            else
            {
                _insert = true;
            }
            LoadingData = false;
            await InvokeAsync(StateHasChanged);
        });
    }
    protected override async void Save()
    {
        if (await Validation.ValidateAll())
        {
            if (!settings.Password.Equals(passwordInDb))
            {
                settings.Password = EncryptionService.EncryptObject(settings.Password);
                passwordInDb = settings.Password;
            }
            if (_insert)
            {
                Context.ActiveDirectorySettings.Add(settings);
                _insert = false;
            }
            base.Save();
        }

    }

}




