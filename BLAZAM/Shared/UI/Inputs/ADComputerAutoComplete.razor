@namespace BLAZAM.Server.Shared.UI
@inherits AutoCompleteComponentBase
<Autocomplete TItem="IADComputer"
              TValue="IADComputer"
              Data="@Computers"
              @bind-Search="SearchTerm"
              ReadData="@SearchComputers"
              TextField="@(( item ) => item.CanonicalName)"
              ValueField="@(( item ) => item)"
              @bind-SelectedValue="@SelectedComputer"
              Placeholder="Search..."
              MinLength="3"
              FreeTyping>
    <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
</Autocomplete>
@code {


    IEnumerable<IADComputer> _computers;

    [Parameter]
    public IEnumerable<IADComputer> Computers
    {
        get => _computers; set
        {   
            if (_computers == value) return;
            _computers = value;
            ComputersChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<IEnumerable<IADComputer>> ComputersChanged { get; set; }




    public IADComputer _selectedComputer;

    [Parameter]
    public IADComputer SelectedComputer
    {
        get => _selectedComputer; set
        {
            if (_selectedComputer == value) return;
            Computers = new List<IADComputer> { value }.AsEnumerable();
            _selectedComputer = value;
            SelectedComputerChanged.InvokeAsync(value);
        }
    }
    
    [Parameter]
    public EventCallback<IADComputer> SelectedComputerChanged { get; set; }
    
    
    
    
    private async Task SearchComputers(AutocompleteReadDataEventArgs autocompleteReadDataEventArgs)
    {
        if (!autocompleteReadDataEventArgs.CancellationToken.IsCancellationRequested)
        {
           var temp = await Directory.Computers.FindByStringAsync(autocompleteReadDataEventArgs.SearchValue);
            if (!autocompleteReadDataEventArgs.CancellationToken.IsCancellationRequested)
            {
                Computers = temp;
            }


        }
    }

    
}
