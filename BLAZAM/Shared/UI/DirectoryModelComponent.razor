@inherits ValidatedForm

@code {
    protected bool EditMode = false;
    protected AppModal? UploadThumbnailModal { get; set; }
    protected AppModal? AssignToModal { get; set; }
    protected AppModal? MoveToModal { get; set; }
    protected AppModal? RenameModal { get; set; }
    protected AppModal? ChangePasswordModal { get; set; }
    protected string _searchTerm;



    IADUser _user;
    IADGroup _group;

    [Parameter]
    public IADGroup Group
    {
        get => _group; set
        {
            if (_group == value) return;
            
            _group = value;

            if (_group != null)

                if (!_group.NewEntry)
                    AuditLogger.Group.Searched(_group);
        }
    }


    List<IADGroup> _groups;

    [Parameter]
    public List<IADGroup> Groups
    {
        get => _groups; set
        {
            if (_groups == value) return;
            _groups = value;
            if (_groups != null)
            {
               
                RefreshGroupGroups();
            }
        }
    }


    [Parameter]
    public IADComputer Computer
    {
        get; set;
    }
    [Parameter]
    public IADUser User
    {
        get => _user; set
        {
            if (_user == value) return;
            _user = value;
            if (_user != null)
            {
                if (!_user.NewEntry)
                    AuditLogger.User.Searched(_user);
                RefreshUserGroups();
            }

        }
    }
    protected List<IADGroup> memberOfGroups;

    [Parameter]
    public IADOrganizationalUnit OU { get; set; }





    /// <summary>
    /// Standard search page initializer that copies the url search term to the
    /// text search term if it is set.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        if (_searchTerm == null || _searchTerm == "")
        {
            LoadingData = false;

        }


        await InvokeAsync(StateHasChanged);

    }



    protected async Task RefreshUserGroups()
    {
        await Task.Run(() =>
        {
            LoadingData = true;
            InvokeAsync(StateHasChanged);
            if (User != null)
                memberOfGroups = User.MemberOf;

            LoadingData = false;

            InvokeAsync(StateHasChanged);

        });
    }
    protected async Task RefreshGroupGroups()
    {
        await Task.Run(() =>
        {
            LoadingData = true;
            InvokeAsync(StateHasChanged);

            if (Group != null)
                memberOfGroups = Group.MemberOf;
            LoadingData = false;
            InvokeAsync(StateHasChanged);

        });
    }
    protected async Task RefreshComputerGroups()
    {
        await Task.Run(() =>
        {
            LoadingData = true;
            InvokeAsync(StateHasChanged);

            if (Computer != null)
                memberOfGroups = Computer.MemberOf;


            LoadingData = false;

            InvokeAsync(StateHasChanged);

        });
    }

    [Parameter]
    public IFluentColumnWithSize FieldColumnSize { get; set; } = ColumnSize.Is6.OnWidescreen.Is4.OnFullHD;

    protected async Task ToggleEditMode()
    {
        EditMode = !EditMode;
    }
}
