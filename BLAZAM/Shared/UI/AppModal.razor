
<MudMessageBox Title=@Title @ref="Modal" >
    <MessageContent>
            @ChildContent
    </MessageContent>
</MudMessageBox>
@code {
    #nullable disable warnings
    //[Inject]
    //protected INotificationService NotificationService{ get; set; }
    [Parameter]
    public IDatabaseContext? Context { get; set; }


    [Parameter]
    public string? Title{ get; set; }

    [Parameter]
    public bool AllowClose { get; set; } = true;
    
    [Parameter]
    public bool FocusTrap{ get; set; } = false;

    [Parameter]
    public RenderFragment? ChildContent{ get; set; }

    [CascadingParameter]
    protected MudMessageBox? Modal { get; set; }

    [Parameter]
    public EventCallback<MudMessageBox>? ModalChanged { get; set; }

    bool _isShown = false;

    [Parameter]
    public bool IsShown { get=>_isShown; set
        {
            if(value==_isShown)return;
            _isShown = value;
            IsShownChanged.InvokeAsync(value);
        } }

    [Parameter]
    public EventCallback<bool> IsShownChanged { get; set; }

    //async Task ModalClosing(ModalClosingEventArgs args)
    //{
    //    if (!AllowClose)
    //    {
    //        args.Cancel=true;
    //    }
    //}
    public void Show()
    {
        
        IsShown = true;
        Modal?.Show();
    }
    public void Hide()
    {
        IsShown = false;

        Modal?.Close();
    }

}
