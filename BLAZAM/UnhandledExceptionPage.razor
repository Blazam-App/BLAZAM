@inject EmailService email
@inject AppDatabaseFactory factory
<PageTitle>Error</PageTitle>






<MudCard>
    <MudCardBody>
        Something terrible has happened...

    </MudCardBody>
</MudCard>

@if (Program.InDebugMode)
{

    <MudCard>
        <MudCardHeader>
            @Error.Source : @Error.GetType()
        </MudCardHeader>
        <MudCardBody>
            Error Message: @Error.Message
        </MudCardBody>
        <MudCardBody TextOverflow="TextOverflow.NoWrap" Overflow="Overflow.Scroll">
            Stack Trace: <br>
            @((MarkupString)_error.StackTrace.Replace("\n","<br><br>"))
        </MudCardBody>
    </MudCard>





}



@code {
    private Exception? _error;
    private List<string> StackTrace { get; set; } = new();
    [Parameter]
    public Exception? Error
    {
        get => _error; set

        {
            if (value == _error) return;
            _error = value;
            if (_error != null)
            {
                try{
                    email.SendMessage(
                            "BLAZAM Unhandled Exception",
                        "bugs@blazam.org",
                        (MarkupString)(_error.GetType() + " : " + _error.Message),
                            (MarkupString)_error.StackTrace.Replace("\n","<br><br>")
                    );
                }
                catch
                {
                    
                }
            }
        }
    }
}